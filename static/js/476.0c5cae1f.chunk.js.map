{"version":3,"file":"static/js/476.0c5cae1f.chunk.js","mappings":"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","sources":["components/dashboard/Blog.js","components/dashboard/ProjectTable.js","components/dashboard/SalesChart.js","components/dashboard/CollectionChart.js","components/dashboard/Summary.js","views/Dashboard.js"],"sourcesContent":["import {\r\n  Card,\r\n  CardBody,\r\n  CardImg,\r\n  CardSubtitle,\r\n  CardText,\r\n  CardTitle,\r\n  Button,\r\n} from \"reactstrap\";\r\n\r\nconst Blog = (props) => {\r\n  return (\r\n    <Card>\r\n      <CardImg alt=\"Card image cap\" src={props.image} />\r\n      <CardBody className=\"p-4\">\r\n        <CardTitle tag=\"h5\">{props.title}</CardTitle>\r\n        <CardSubtitle>{props.subtitle}</CardSubtitle>\r\n        <CardText className=\"mt-3\">{props.text}</CardText>\r\n        <Button color={props.color}>Read More</Button>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Blog;\r\n","import { Card, CardBody, CardTitle, Table } from \"reactstrap\";\r\nimport user1 from \"../../assets/images/users/user1.jpg\";\r\nimport user2 from \"../../assets/images/users/user2.jpg\";\r\nimport user3 from \"../../assets/images/users/user3.jpg\";\r\nimport user4 from \"../../assets/images/users/user4.jpg\";\r\nimport user5 from \"../../assets/images/users/user5.jpg\";\r\n\r\nconst tableData = [\r\n  {\r\n    avatar: user1,\r\n    name: \"Hanna Gover\",\r\n    email: \"hgover@gmail.com\",\r\n    project: \"Flexy React\",\r\n    status: \"pending\",\r\n    weeks: \"35\",\r\n    budget: \"95K\",\r\n  },\r\n  {\r\n    avatar: user2,\r\n    name: \"Hanna Gover\",\r\n    email: \"hgover@gmail.com\",\r\n    project: \"Lading pro React\",\r\n    status: \"done\",\r\n    weeks: \"35\",\r\n    budget: \"95K\",\r\n  },\r\n  {\r\n    avatar: user3,\r\n    name: \"Hanna Gover\",\r\n    email: \"hgover@gmail.com\",\r\n    project: \"Elite React\",\r\n    status: \"holt\",\r\n    weeks: \"35\",\r\n    budget: \"95K\",\r\n  },\r\n  {\r\n    avatar: user4,\r\n    name: \"Hanna Gover\",\r\n    email: \"hgover@gmail.com\",\r\n    project: \"Flexy React\",\r\n    status: \"pending\",\r\n    weeks: \"35\",\r\n    budget: \"95K\",\r\n  },\r\n  {\r\n    avatar: user5,\r\n    name: \"Hanna Gover\",\r\n    email: \"hgover@gmail.com\",\r\n    project: \"Ample React\",\r\n    status: \"done\",\r\n    weeks: \"35\",\r\n    budget: \"95K\",\r\n  },\r\n];\r\n\r\nconst ProjectTables = () => {\r\n  return (\r\n    <div>\r\n      <Card>\r\n        <CardBody>\r\n          <CardTitle tag=\"h5\">Quick Navigation</CardTitle> \r\n\r\n          <Table className=\"no-wrap mt-3 align-middle\" responsive borderless>\r\n            <thead>\r\n              <tr>\r\n                <th>Team Lead</th>\r\n                <th>Project</th>\r\n\r\n                <th>Status</th>\r\n                <th>Weeks</th>\r\n                <th>Budget</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {tableData.map((tdata, index) => (\r\n                <tr key={index} className=\"border-top\">\r\n                  <td>\r\n                    <div className=\"d-flex align-items-center p-2\">\r\n                      <img\r\n                        src={tdata.avatar}\r\n                        className=\"rounded-circle\"\r\n                        alt=\"avatar\"\r\n                        width=\"45\"\r\n                        height=\"45\"\r\n                      />\r\n                      <div className=\"ms-3\">\r\n                        <h6 className=\"mb-0\">{tdata.name}</h6>\r\n                        <span className=\"text-muted\">{tdata.email}</span>\r\n                      </div>\r\n                    </div>\r\n                  </td>\r\n                  <td>{tdata.project}</td>\r\n                  <td>\r\n                    {tdata.status === \"pending\" ? (\r\n                      <span className=\"p-2 bg-danger rounded-circle d-inline-block ms-3\"></span>\r\n                    ) : tdata.status === \"holt\" ? (\r\n                      <span className=\"p-2 bg-warning rounded-circle d-inline-block ms-3\"></span>\r\n                    ) : (\r\n                      <span className=\"p-2 bg-success rounded-circle d-inline-block ms-3\"></span>\r\n                    )}\r\n                  </td>\r\n                  <td>{tdata.weeks}</td>\r\n                  <td>{tdata.budget}</td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        </CardBody>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProjectTables;\r\n","import { Card, CardBody, CardHeader, CardTitle, Row } from \"reactstrap\";\r\nimport Chart from \"react-apexcharts\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst SalesChart = () => {\r\n\tconst {companyName}  = useSelector(state=>state.auth)\r\n\tconst chartoptions = {\r\n\tseries: [\r\n\t\t{\r\n\t\t\tname: \"Disbursement\",\r\n\t\t\tdata: [0, 31, 40, 28, 51, 42, 109, 100],\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Collection\",\r\n\t\t\tdata: [0, 11, 32, 45, 32, 34, 52, 41],\r\n\t\t\tbackgroundColor:'red'\r\n\t\t},\r\n\t],\r\n\toptions: {\r\n\t\tchart: {\r\n\t\t\ttype: \"bar\",\r\n\t\t},\r\n\t\tdataLabels: {\r\n\t\t\tenabled: false,\r\n\t\t},\r\n\t\tgrid: {\r\n\t\t\tstrokeDashArray: 3,\r\n\t\t},\r\n\t\tcolors: ['#3b58c7', '#E91E63'],\r\n\t\tstroke: {\r\n\t\t\tcurve: \"smooth\",\r\n\t\t\twidth: 1,\r\n\t\t},\r\n\t\txaxis: {\r\n\t\t\tcategories: [\r\n\t\t\t\t\"Jan\",\r\n\t\t\t\t\"Feb\",\r\n\t\t\t\t\"March\",\r\n\t\t\t\t\"April\",\r\n\t\t\t\t\"May\",\r\n\t\t\t\t\"June\",\r\n\t\t\t\t\"July\",\r\n\t\t\t\t\"Aug\",\r\n\t\t\t],\r\n\t\t},\r\n\t},\r\n\t};\r\n\treturn (\r\n\t<Card>\r\n\t\t<CardHeader>\r\n\t\t\t<div className=\"d-flex mt-1 mb-1\">\r\n\t\t\t<CardTitle tag=\"h5\">LIVE Dashboard : <span className=\"text-primary\">{companyName}</span> \r\n\t\t\t</CardTitle>  \r\n\t\t\t<small> &nbsp;{' 30-11-2023 to 30-11-2024'} </small>\r\n\t\t\t</div>\r\n\t\t\t<Row>\r\n\t\t\t\t<small> MONTHLY DISBURSEMENT & COLLECTION -2024 </small>\r\n\t\t\t</Row>\r\n\t\t</CardHeader>\r\n\t\t<CardBody>\r\n\t\t<Chart\r\n\t\t\ttype=\"bar\"\r\n\t\t\twidth=\"100%\"\r\n\t\t\theight=\"390\"\r\n\t\t\toptions={chartoptions.options}\r\n\t\t\tseries={chartoptions.series}\r\n\t\t></Chart>\r\n\t\t</CardBody>\r\n\t</Card>\r\n\t);\r\n};\r\n\r\nexport default SalesChart;\r\n","import { Card, CardBody, Spinner } from \"reactstrap\";\r\n// import { fetchCollections } from \"../../features/collections/collectionSlice\";\r\n// import { useDispatch, useSelector } from \"react-redux\";\r\nimport { useGetCollectionsQuery } from \"../../features/api\";\r\nimport Chart from \"react-apexcharts\";  \r\n\r\nconst CollectionChart = () => {\r\n  // const dispatch = useDispatch()\r\n  // const {loading,series, labels} = useSelector(state=>state.collections)\r\n  const { data, isLoading, isSuccess, error } = useGetCollectionsQuery()\r\n  \r\n  let chartoptions = {\r\n    series:[],\r\n    options: {\r\n      chart: {\r\n        width: 380,\r\n        type: 'pie',\r\n      },\r\n      labels: [],\r\n      responsive: [{\r\n        breakpoint: 480,\r\n        options: {\r\n          chart: {\r\n            width: 200\r\n          },\r\n          legend: {\r\n            position: 'bottom'\r\n          },\r\n        }\r\n\t}],\r\n\tcolors: ['#3b58c7', '#E91E63'],\r\n\tmarkers:{ \r\n\t}\r\n    },\r\n  };\r\n  \r\n  if(isSuccess)\r\n  {\r\n    chartoptions.series=data.series\r\n    chartoptions.options.labels=data.labels\r\n  } \r\n  if(isLoading) return <Spinner />\r\n  if(error)\r\n  {\r\n    console.log(error) \r\n  }\r\n  return (\r\n    <Card>\r\n      <CardBody>  \r\n        <Chart\r\n          type=\"pie\"\r\n          width=\"100%\"\r\n          height=\"390\"\r\n          options={chartoptions.options}\r\n          series={chartoptions.series}\r\n        />\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default CollectionChart;","import React from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardTitle, \r\n  CardSubtitle, \r\n} from \"reactstrap\";\r\nimport CollectionChart from \"./CollectionChart\";\r\n//eslint-disable-next-line\r\nconst FeedData = [\r\n  {\r\n    title: \"Cras justo odio\",\r\n    icon: \"bi bi-bell\",\r\n    color: \"primary\",\r\n    date: \"6 minute ago\",\r\n  },\r\n  {\r\n    title: \"New user registered.\",\r\n    icon: \"bi bi-person\",\r\n    color: \"info\",\r\n    date: \"6 minute ago\",\r\n  },\r\n  {\r\n    title: \"Server #1 overloaded.\",\r\n    icon: \"bi bi-hdd\",\r\n    color: \"danger\",\r\n    date: \"6 minute ago\",\r\n  },\r\n  {\r\n    title: \"New order received.\",\r\n    icon: \"bi bi-bag-check\",\r\n    color: \"success\",\r\n    date: \"6 minute ago\",\r\n  },\r\n  {\r\n    title: \"Cras justo odio\",\r\n    icon: \"bi bi-bell\",\r\n    color: \"dark\",\r\n    date: \"6 minute ago\",\r\n  },\r\n  {\r\n    title: \"Server #1 overloaded.\",\r\n    icon: \"bi bi-hdd\",\r\n    color: \"warning\",\r\n    date: \"6 minute ago\",\r\n  },\r\n];\r\n\r\nconst Summary = () => {\r\n  return (\r\n    <Card>\r\n      <CardBody>\r\n        <CardTitle tag=\"h5\">Summary</CardTitle>\r\n        <CardSubtitle className=\"mb-2 text-muted\" tag=\"h6\">\r\n          Today Live Collection Status\r\n        </CardSubtitle>\r\n        {/* <ListGroup flush className=\"mt-4\">\r\n          {FeedData.map((feed, index) => (\r\n            <ListGroupItem\r\n              key={index}\r\n              action\r\n              href=\"/\"\r\n              tag=\"a\"\r\n              className=\"d-flex align-items-center p-3 border-0\"\r\n            >\r\n              <Button\r\n                className=\"rounded-circle me-3\"\r\n                size=\"sm\"\r\n                color={feed.color}\r\n              >\r\n                <i className={feed.icon}></i>\r\n              </Button>\r\n              {feed.title}\r\n              <small className=\"ms-auto text-muted text-small\">\r\n                {feed.date}\r\n              </small>\r\n            </ListGroupItem>\r\n          ))}\r\n        </ListGroup> */}\r\n        <CollectionChart/>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Summary;\r\n","import { Button, Col, Row } from \"reactstrap\";\r\nimport SalesChart from \"../components/dashboard/SalesChart\";\r\nimport Summary from \"../components/dashboard/Summary\";\r\nimport ProjectTables from \"../components/dashboard/ProjectTable\"; \r\nimport Blog from \"../components/dashboard/Blog\";\r\nimport bg1 from \"../assets/images/bg/bg1.jpg\";\r\nimport bg2 from \"../assets/images/bg/bg2.jpg\";\r\nimport bg3 from \"../assets/images/bg/bg3.jpg\";\r\nimport bg4 from \"../assets/images/bg/bg4.jpg\";\r\nimport { useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst BlogData = [\r\n  {\r\n    image: bg1,\r\n    title: \"This is simple blog\",\r\n    subtitle: \"2 comments, 1 Like\",\r\n    description:\r\n      \"This is a wider card with supporting text below as a natural lead-in to additional content.\",\r\n    btnbg: \"primary\",\r\n  },\r\n  {\r\n    image: bg2,\r\n    title: \"Lets be simple blog\",\r\n    subtitle: \"2 comments, 1 Like\",\r\n    description:\r\n      \"This is a wider card with supporting text below as a natural lead-in to additional content.\",\r\n    btnbg: \"primary\",\r\n  },\r\n  {\r\n    image: bg3,\r\n    title: \"Don't Lamp blog\",\r\n    subtitle: \"2 comments, 1 Like\",\r\n    description:\r\n      \"This is a wider card with supporting text below as a natural lead-in to additional content.\",\r\n    btnbg: \"primary\",\r\n  },\r\n  {\r\n    image: bg4,\r\n    title: \"Simple is beautiful\",\r\n    subtitle: \"2 comments, 1 Like\",\r\n    description:\r\n      \"This is a wider card with supporting text below as a natural lead-in to additional content.\",\r\n    btnbg: \"primary\",\r\n  },\r\n];\r\n\r\nconst Starter = () => {\r\n  let navigate = useNavigate()\r\n  let state = useSelector(state=>state.auth)\r\n  \r\n  useEffect(()=>{\r\n    if(state.companyID===null || state.userToken===null)\r\n    {\r\n      if(state.userToken)\r\n      {\r\n        navigate('/landing')\r\n        return   \r\n      }\r\n      navigate('/login')  \r\n    }\r\n  },[navigate,state.userToken,state.companyID])\r\n  return (\r\n    <div>\r\n      {/***Top Cards***/}\r\n      \r\n      <Row>\r\n        <Col sm=\"6\" lg=\"6\" xl=\"7\" xxl=\"8\">\r\n          <SalesChart />\r\n        </Col>\r\n        <Col sm=\"6\" lg=\"6\" xl=\"5\" xxl=\"4\">\r\n          <Summary /> \r\n        </Col>\r\n      </Row>\r\n      {/***Table ***/}\r\n      <Row>\r\n        <Col lg=\"8\" xl=\"7\" xxl=\"8\" >\r\n          <Button\r\n            color=\"primary\"\r\n            className=\"col-md-6 \" \r\n            style={{backgroundColor:'rgba(0, 143, 251)'}}\r\n          >Google Location\r\n          </Button>\r\n          <Button\r\n            color=\"danger\"\r\n            className=\"col-md-5 mx-4\"  \r\n          >Connect Device\r\n          </Button>\r\n        </Col>\r\n        <Col lg=\"8\" xl=\"7\" xxl=\"8\" className=\"mt-4\">\r\n          {/* <Summary />  */}\r\n        </Col>\r\n      </Row>\r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Starter;\r\n"],"names":["props","_jsxs","Card","children","_jsx","CardImg","alt","src","image","CardBody","className","CardTitle","tag","title","CardSubtitle","subtitle","CardText","text","Button","color","tableData","avatar","user1","name","email","project","status","weeks","budget","user2","user3","user4","user5","ProjectTables","Table","responsive","borderless","map","tdata","index","width","height","SalesChart","companyName","useSelector","state","auth","chartoptions","series","data","backgroundColor","options","chart","type","dataLabels","enabled","grid","strokeDashArray","colors","stroke","curve","xaxis","categories","CardHeader","Row","Chart","CollectionChart","isLoading","isSuccess","error","useGetCollectionsQuery","labels","breakpoint","legend","position","markers","Spinner","console","log","Summary","Starter","navigate","useNavigate","useEffect","companyID","userToken","Col","sm","lg","xl","xxl","style"],"sourceRoot":""}